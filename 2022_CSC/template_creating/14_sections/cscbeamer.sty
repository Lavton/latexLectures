\NeedsTeXFormat{LaTeX2e}[1995/12/01]
\ProvidesPackage{cscbeamer}[2022/05/17 The style file for beamer class to Computer Science Center]
\RequirePackage{kvoptions} %  <-- передаём параметры в пакет

% process the arguments for the package
\SetupKeyvalOptions{
    family=KVCSC,
    prefix=KVCSC@
}
\DeclareStringOption[nologo]{logo}[logo-short-green.png]
\ProcessKeyvalOptions*

\providecommand{\CSC}{Computer Science Center} 


\RequirePackage{xcolor}
\RequirePackage{ifthen} 
% define colors (green -- for structure and gray -- for titles)
\definecolor{cscgreen}{RGB}{7, 195, 159}
\definecolor{titlegray}{RGB}{89, 89, 89}
\setbeamercolor{title}{fg=titlegray}
\setbeamercolor{frametitle}{fg=titlegray}
\setbeamercolor{structure}{fg=cscgreen}

\providecommand{\ccsc}{\color{cscgreen}}
\newcommand{\logoname}{\KVCSC@logo}%

%%%%%%%%%%%%%%%%% сделаем сверху небольшую линию
\setbeamertemplate{headline}{%
    \immediate\update@section@counters% <-- обновляем номера, где начинаются секции (если надо)
    \set@sectionprogress@length% <-- обновляем длину прогрессбара
    {\color{cscgreen}%
    \rule{\rule@length}{0.1cm}}%
}

% global renewcommand. From https://tex.stackexchange.com/questions/51733/global-renewcommand-equivalent-of-global-def
\def\gnewcommand{\g@star@or@long\new@command}
\def\grenewcommand{\g@star@or@long\renew@command}
\def\g@star@or@long#1{% 
  \@ifstar{\let\l@ngrel@x\global#1}{\def\l@ngrel@x{\long\global}#1}} 
  
\newcommand{\csc@footnote}{}
\newcommand{\cscfootnote}[1]{%
    \grenewcommand{\csc@footnote}{% 
        {\fontsize{10}{12}\selectfont#1}% 
    }%
}

\newcount\is@wide@slide
\ifdim\paperwidth>370pt %
    \is@wide@slide=1
\else
    \is@wide@slide=0
\fi
\newlength{\cscfootnotelen}%
\newdimen\rule@length
\rule@length=\paperwidth%
\ifnum\is@wide@slide=1%
    \setlength{\cscfootnotelen}{12cm}
\else
    \setlength{\cscfootnotelen}{9cm}
\fi

\newbox\footnote@box %

\newif\iffootnotefullwidth% 
\newcommand{\check@footwidth}[1]{%
    \setbox\footnote@box=#1\relax%
    \ifdim\ht\footnote@box>36pt\relax% 
        \footnotefullwidthtrue%
    \else%
        \footnotefullwidthfalse%
    \fi%
}


% footline
\setbeamertemplate{navigation symbols}{} 
\setbeamertemplate{footline}{%
    \usebeamercolor[fg]{page number in head/foot}%
    \usebeamerfont{page number in head/foot}%
    \check@footwidth{\hbox{\parbox[b]{\cscfootnotelen}{%
            \centering% 
            \csc@footnote}}}
    \iffootnotefullwidth% 
        \hfill%
        \raisebox{0em}[0pt][0pt]{\hbox{\parbox[b]{\dimexpr\paperwidth-30pt}{%
            \centering% 
            \csc@footnote}}% 
        }%
        \hfill%
    \else%  
        % пишем номер слайда - заметку на полях - лого
        \makebox[0pt]{\hspace{1.5cm}\includegraphics[width=1.0cm]{\logoname}}% 
        \hfill% 
        \raisebox{0em}[0pt][0pt]{\parbox[b]{\cscfootnotelen}{% 
            \centering% 
            \csc@footnote}% 
        }% 
        \hfill% 
        \cscfootnote{}%
        \raisebox{0pt}[0pt][0pt]{\makebox[0pt]{\makebox[20pt][r]{% 
            \ifthenelse{\equal{\insertframenumber}{1}}{}{\insertframenumber\,/\,\inserttotalframenumber}% 
            \hspace{20pt}%
        }}}% 
    \fi
    \vspace{2pt}%
    \cscfootnote{}%
}%


% заголовок
% https://tex.stackexchange.com/questions/415621/how-to-customize-the-frame-title-subtitle-main-text-in-terms-of-position-and?rq=1
\setbeamertemplate{frametitle}{%
    \usebeamerfont{frametitle}\strut\insertframetitle%
    % \space|\the\section@start@slide$\to$\the\section@end@slide|% <-- для наглядности смотрим, где начало и конец секции
    \strut\par%
    \ifx\insertframesubtitle\@empty%
      \else%
      {\usebeamerfont{framesubtitle}\usebeamercolor[fg]{framesubtitle}\insertframesubtitle\strut\par}%
      \fi%
    \vspace{-10pt}%
    {\color{cscgreen}%
      \par\noindent\rule{\textwidth}{0.4pt}}%
}

%%%%%% сокращаем ссылки на github
\RequirePackage{url}
\def\git@hub https://github.com#1 {#1}%
\newcommand{\github}[1]{% 
{%
    \normalfont \href{#1}{% 
        \raisebox{-0.5ex}{\includegraphics[width=3ex,height=3ex,keepaspectratio]{GitHub-Mark-64px.png}}\!\url{\git@hub #1 }}%
    }
}

%%% определим концепт "сложного" слайда и посчитаем их число
\newcount\hard@slide@c 
\hard@slide@c=0  
\newcommand{\hardslide}{%
\advance\hard@slide@c by 1%
}
\newcommand{\thehardslidecount}{\the\hard@slide@c} %

%%%% пробуем определить, где идут секции и где они заканчиваются, а так же графически изобразить прогресс
% проблема: TeX не имеет информации о будущих страницах. Надо эту информацию сохранять в отдельном запуске (как с библиографией, например)
% алгоритм:
% 1. поймём, как "подвязаться" к команде создания секции
% 2. при вызове секции сохраним инфу о нормере слайда в файл 
% 3. прочитаем файл в отдельную переменную при новом запуске
% 4. когда надо будем обновлять информацию: какой номер начинает текущую секцию, где она заканчивается
% 5. на основе этого и текущего слайда определим длину "прогрессбара"


\def\ifnot#1{#1\else\expandafter\expandafter\fi\iffalse\iftrue\fi} % <-- нам понадобится инверсия условия if. См https://tex.stackexchange.com/questions/108911/negating-ifeof
%% 1. 
\let\old@section=\beamer@section        % <--- вместо "секции" задаём новую команду, которая выводит секцию но в дополнении дописывает файл

%% 2. записываем в файл 
\newwrite\sectionfile@writer
\openout\sectionfile@writer=\jobname.secw\relax

\long\def\beamer@section[#1]#2{% <-- нотацию узнаём благодаря \expandmacros
    \old@section[#1]{#2}\relax% <-- сначала выполняем основную команду
    \immediate\write\sectionfile@writer{\insertframenumber}% <-- но потом ещё пишем в файл номер слайда
}

%% 3. теперь научимся из файла читать и сохраним всё в регистр
\newtoks\sections@list% <---- регистр, в котором будут храниться информация о существующих секциях
\newread\sectionfile@reader
\openin\sectionfile@reader=\jobname.secw\relax

\def\readallsections{%
    \def\stopread{\par }% <-- в файле последняя строка пустая, мы хотим её игнорировать
    \loop\relax% <-- начинаем цикл
    \ifnot{\ifeof\sectionfile@reader}\relax%  <-- если ещё не достигли конца файла, можно работать
    \read\sectionfile@reader to\newline% <-- записываем значение на этой строке в переменную
        \ifx\newline\stopread\relax%  <-- если получили '\par ', значит дальше ничего нет
            \def\newline{-1\space}%  <-- впишем вместо '\par ' '-1 '. Чтобы не обрабатывать нечисла
        \fi\relax%
        \edef\tempa{\the\sections@list\newline}% <-- edef значит, что мы значала раскрываем полностью содержимое внутри, а потом уже создаём макрос. Тут мы добавляем к существующему набору списка секций новую https://tex.stackexchange.com/questions/38067/how-does-one-append-material-to-a-token-list
        \sections@list=\expandafter{\tempa}%  <-- пишем получившееся в регистр. Без \expandafter мы бы не раскрывали \tempa и в итоге бы получили содержимое просто '\tempa'
    \repeat\relax%
}

\readallsections% <-- сразу прочитаем все секции.

%% 4. создадим возможность парсить прочитанное
\newcount\section@start@slide% <-- где текущая секция начинается
\newcount\section@end@slide% <-- где текущая секция заканчивается
\section@start@slide=1
\section@end@slide=-1

\def\spit@head@section#1 #2\relax{% <-- в нашем регистре хранится строка вида '3 8 11 -1 '. Этой функцией мы хотим отделить '3' и положить её в счётчик, а оставшиеся '8 11 -1 ' записать обратно в регистр
    \def\a{#1}%
    \ifnot{\ifx\a\@empty}%
        \global\section@end@slide=#1% <-- кладём первое число в счётчик
        \ifx\relax#2\relax% <-- если #2=\relax, то строка кончилась. 
            \global\sections@list=\expandafter{-1 \space}% <-- тогда запишем для общности в регистр '-1 '
        \else\relax% <-- ещё не кончилось
            \global\sections@list=\expandafter{#2}% <-- записываем хвост в регистр 
        \fi\relax%
        \ifnum\section@end@slide=-1\relax% <-- сразу переформируем. Если конец секции в -1, на самом деле оно идёт до конца слайдов
            \global\section@end@slide=\numexpr \inserttotalframenumber + 1\relax%
        \fi\relax%
    \fi%
}

\def\getnext@section@slidenumber{% <-- головная функциея, которая будет отделять первое число в списке секций от оставшихся
    \edef\tempa{\the\sections@list}% <-- обозначаем список
    \ifnot{\ifx\tempa\empty}\relax% <-- если что-то там есть
        \expandafter\spit@head@section\tempa\relax%<-- то запускаем функцию выше
    \fi\relax%
}


\def\update@section@counters{% <-- обновляем информацию о секции при каждом слайде
    \ifnum\section@end@slide=-1\relax% <-- граничное условия
        \ifnum\inserttotalframenumber=1\relax% <-- возникает при самом первом запуске команды, например
            \global\section@end@slide=1\relax%
        \else%
            \global\section@end@slide=\numexpr \inserttotalframenumber + 1\relax%
        \fi%
    \fi\relax%
    \ifnot{\ifnum\insertframenumber<\section@end@slide}\relax% <-- если текущий слайд больше или равен слайду, где заканчивается текущая секция, значит пора обновит информацию!
        \getnext@section@slidenumber% <-- получаем где заканчивается новая секция 
        \global\section@start@slide=\insertframenumber% <-- ну а начинается она прям тут
    \fi\relax
}
\update@section@counters% <-- сразу же узнаём, где стартует первая секция 


%% 5.  вычислим длину прогрессбара
\def\set@sectionprogress@length{% <-- арифметика такая. Если секция начинается в a, а следующая за ней начинается в b, при этом текущий слайд d...
% длина прогрессбара будет <basic>/(b-a) * (d-1-a)
    \ifnum\section@start@slide>1\relax%
        \rule@length=\paperwidth%
        \newcount\thisposprogressbar%
        \thisposprogressbar=\numexpr\insertframenumber +1 - \the\section@start@slide\relax%
        \newcount\thatposprogressbar%
        \thatposprogressbar=\numexpr\the\section@end@slide - \the\section@start@slide\relax%
        \ifnot{\ifnum\thatposprogressbar>0}% <-- когда запускаем первый раз и ещё некорректно считаем "количество всех слайдов"
            \global\thatposprogressbar=1%
        \fi
        \divide\rule@length by \thatposprogressbar%
        \multiply\rule@length by \thisposprogressbar%
    \else%
        \rule@length=0pt
    \fi%
}
