\NeedsTeXFormat{LaTeX2e}[1995/12/01]
\ProvidesPackage{progressbar}[2024/12/17 The section-based progressbar]

\def\ifnot#1{#1\else\expandafter\expandafter\fi\iffalse\iftrue\fi} % <-- нам понадобится инверсия условия if. См https://tex.stackexchange.com/questions/108911/negating-ifeof
\def\ifnottitle#1{\ifnot{\ifnum\insertframenumber=1}\relax#1\fi} % на первом слайде (где заголовок) не используем многие элементы

\newif\ifsupressprogressbar % <-- не показывать прогресс-бар
\newdimen\rule@length
\rule@length=\paperwidth%
\setbeamertemplate{headline}{%
\immediate\update@section@counters% <-- обновляем номера, где начинаются секции (если надо)
\immediate\set@sectionprogress@length% <-- обновляем длину прогрессбара
    \ifnottitle{%
    \smash{%
        \ifnot{\ifsupressprogressbar}%
            \lower0.1cm\hbox{%
                {%
                    \color{progressbarcolor}%
                    \rule{\rule@length}{0.1cm}% пускаем линейку
                }%
            }%
        \fi%
    }}%
}%


\let\old@section=\beamer@section        % <--- вместо "секции" задаём новую команду, которая выводит секцию но в дополнении дописывает файл

%% 2. записываем в файл 
\newwrite\sectionfile@writer
\openout\sectionfile@writer=\jobname.secw\relax

\long\def\beamer@section[#1]#2{% <-- нотацию узнаём благодаря \expandmacros
    \old@section[#1]{#2}\relax% <-- сначала выполняем основную команду
    \immediate\write\sectionfile@writer{\insertframenumber}% <-- но потом ещё пишем в файл номер слайда
}
\def\progressend{% <- заканчиваем рисовать прогресс-бар
    \immediate\write\sectionfile@writer{\the\numexpr\insertframenumber+1\relax}% <-- пишем в файл номер слайда+1
    \supressprogressbartrue
}

%% 3. теперь научимся из файла читать и сохраним всё в регистр
\newtoks\sections@list% <---- регистр, в котором будут храниться информация о существующих секциях
\newread\sectionfile@reader
\openin\sectionfile@reader=\jobname.secw\relax
\def\readallsections{%
    \def\stopread{\par }% <-- в файле последняя строка пустая, мы хотим её игнорировать
    \loop\relax% <-- начинаем цикл
    \ifnot{\ifeof\sectionfile@reader}\relax%  <-- если ещё не достигли конца файла, можно работать
    \read\sectionfile@reader to\newline% <-- записываем значение на этой строке в переменную
        \ifx\newline\stopread\relax%  <-- если получили '\par ', значит дальше ничего нет
            \def\newline{-1\space}%  <-- впишем вместо '\par ' '-1 '. Чтобы не обрабатывать нечисла
        \fi\relax%
        \edef\tempa{\the\sections@list\newline}% <-- edef значит, что мы значала раскрываем полностью содержимое внутри, а потом уже создаём макрос. Тут мы добавляем к существующему набору списка секций новую https://tex.stackexchange.com/questions/38067/how-does-one-append-material-to-a-token-list
        \sections@list=\expandafter{\tempa}%  <-- пишем получившееся в регистр. Без \expandafter мы бы не раскрывали \tempa и в итоге бы получили содержимое просто '\tempa'
    \repeat\relax%
}
\readallsections% <-- сразу прочитаем все секции.

%% 4. создадим возможность парсить прочитанное
\newcount\section@start@slide% <-- где текущая секция начинается
\newcount\section@end@slide% <-- где текущая секция заканчивается
\section@start@slide=1
\section@end@slide=-1    

\def\spit@head@section#1 #2\relax{% <-- в нашем регистре хранится строка вида '3 8 11 -1 '. Этой функцией мы хотим отделить '3' и положить её в счётчик, а оставшиеся '8 11 -1 ' записать обратно в регистр
    \def\a{#1}%
    \ifnot{\ifx\a\@empty}%
        \global\section@end@slide=#1% <-- кладём первое число в счётчик
        \ifx\relax#2\relax% <-- если #2=\relax, то строка кончилась. 
            \global\sections@list=\expandafter{-1 \space}% <-- тогда запишем для общности в регистр '-1 '
        \else\relax% <-- ещё не кончилось
            \global\sections@list=\expandafter{#2}% <-- записываем хвост в регистр 
        \fi\relax%
        \ifnum\section@end@slide=-1\relax% <-- сразу переформируем. Если конец секции в -1, на самом деле оно идёт до конца слайдов
            \global\section@end@slide=\numexpr \inserttotalframenumber + 1\relax%
        \fi\relax%
    \fi%
}

\def\getnext@section@slidenumber{% <-- головная функциея, которая будет отделять первое число в списке секций от оставшихся
    \edef\tempa{\the\sections@list}% <-- обозначаем список
    \ifnot{\ifx\tempa\empty}\relax% <-- если что-то там есть
        \expandafter\spit@head@section\tempa\relax%<-- то запускаем функцию выше
    \fi\relax%
}


\def\update@section@counters{% <-- обновляем информацию о секции при каждом слайде
    \ifnum\section@end@slide=-1\relax% <-- граничное условия
        \ifnum\inserttotalframenumber=1\relax% <-- возникает при самом первом запуске команды, например
            \global\section@end@slide=1\relax%
        \else%
            \global\section@end@slide=\numexpr \inserttotalframenumber + 1\relax%
        \fi%
    \fi\relax%
    \ifnot{\ifnum\insertframenumber<\section@end@slide}\relax% <-- если текущий слайд больше или равен слайду, где заканчивается текущая секция, значит пора обновит информацию!
        \getnext@section@slidenumber% <-- получаем где заканчивается новая секция 
        \global\section@start@slide=\insertframenumber% <-- ну а начинается она прям тут
    \fi\relax
}
\update@section@counters% <-- сразу же узнаём, где стартует первая секция 


%% 5.  вычислим длину прогрессбара
\def\set@sectionprogress@length{% <-- арифметика такая. Если секция начинается в a, а следующая за ней начинается в b, при этом текущий слайд d...
% длина прогрессбара будет <basic>/(b-a) * (d-1-a)
    \ifnum\section@start@slide>1\relax%
        \rule@length=\paperwidth%
        \newcount\thisposprogressbar%
        \thisposprogressbar=\numexpr\insertframenumber +1 - \the\section@start@slide\relax%
        \newcount\thatposprogressbar%
        \thatposprogressbar=\numexpr\the\section@end@slide - \the\section@start@slide\relax%
        \ifnot{\ifnum\thatposprogressbar>0}% <-- когда запускаем первый раз и ещё некорректно считаем "количество всех слайдов"
            \global\thatposprogressbar=1%
        \fi
        \divide\rule@length by \thatposprogressbar%
        \multiply\rule@length by \thisposprogressbar%
    \else%
        \rule@length=0pt
    \fi%
}